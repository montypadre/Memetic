[{"/mnt/c/Users/mreyn/Documents/Memetic/memetic/src/index.js":"1","/mnt/c/Users/mreyn/Documents/Memetic/memetic/src/serviceWorker.js":"2","/mnt/c/Users/mreyn/Documents/Memetic/memetic/src/components/App.js":"3","/mnt/c/Users/mreyn/Documents/Memetic/memetic/src/components/Navbar.js":"4","/mnt/c/Users/mreyn/Documents/Memetic/memetic/src/components/Main.js":"5","/mnt/c/Users/mreyn/Documents/Memetic/memetic/src/components/Profile.js":"6"},{"size":1936,"mtime":1611079666159,"results":"7","hashOfConfig":"8"},{"size":4951,"mtime":1610477741743,"results":"9","hashOfConfig":"8"},{"size":3377,"mtime":1611417628111,"results":"10","hashOfConfig":"8"},{"size":1286,"mtime":1611247840634,"results":"11","hashOfConfig":"8"},{"size":3157,"mtime":1611089596580,"results":"12","hashOfConfig":"8"},{"size":1406,"mtime":1611249211878,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"wo6bjo",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"/mnt/c/Users/mreyn/Documents/Memetic/memetic/src/index.js",["30","31","32","33","34"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport './fonts.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport {\n    Dropdown,\n    DropdownToggle,\n    DropdownItem,\n    DropdownSeparator,\n    DropdownPosition,\n    DropdownDirection,\n    KebabToggle\n  } from '@patternfly/react-core';\nimport { ThIcon } from '@patternfly/react-icons';\nimport * as serviceWorker from './serviceWorker';\n\nclass KebabDropdown extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        isOpen: false\n      };\n      this.onToggle = isOpen => {\n        this.setState({\n          isOpen\n        });\n      };\n      this.onSelect = event => {\n        this.setState({\n          isOpen: !this.state.isOpen\n        });\n        this.onFocus();\n      };\n      this.onFocus = () => {\n        const element = document.getElementById('toggle-id-6');\n        element.focus();\n      };\n    }\n  \n    render() {\n      const { isOpen } = this.state;\n      const dropdownItems = [\n        <DropdownItem key=\"edit\">Edit</DropdownItem>,\n        <DropdownItem key=\"delete\">Delete</DropdownItem>\n      ];\n      return (\n        <Dropdown\n          className=\"float-right\"\n          onSelect={this.onSelect}\n          toggle={<KebabToggle onToggle={this.onToggle} id=\"toggle-id-6\" />}\n          isOpen={isOpen}\n          isPlain\n          dropdownItems={dropdownItems}\n        />\n      );\n    }\n  }\n  \n  \nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<KebabDropdown />, rootElement);\nReactDOM.render(<App />, document.getElementById('root'));\nexport default KebabDropdown;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["35","36"],"/mnt/c/Users/mreyn/Documents/Memetic/memetic/src/serviceWorker.js",[],"/mnt/c/Users/mreyn/Documents/Memetic/memetic/src/components/App.js",["37"],"/mnt/c/Users/mreyn/Documents/Memetic/memetic/src/components/Navbar.js",["38","39"],"import React, { Component } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport Identicon from 'identicon.js';\nimport Profile from './Profile';\n\nclass Navbar extends Component {\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n           <NavLink to=\"/\" style={{textDecoration: 'none'}}>\n              Memetic\n            </NavLink>\n            <ul className=\"navbar-nav px-3\">\n              <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n                <small className=\"text-secondary\">\n                 <small id=\"account\">{this.props.account}</small>\n                </small>\n                { this.props.account \n                  ? \n                      <NavLink to=\"/profile\">\n                        <img \n                          className='ml-2' \n                          width='30' \n                          height='30' \n                          src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`} \n                        />\n                      </NavLink>\n                     \n                  : <span></span>\n                }\n              </li>\n            </ul>\n          </nav>\n        );\n    }\n}\n\nexport default Navbar;","/mnt/c/Users/mreyn/Documents/Memetic/memetic/src/components/Main.js",["40","41"],"import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport KebabDropdown from '../index.js';\nimport Identicon from 'identicon.js';\n\nclass Main extends Component {\n    render() {\n        return (\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '500px' }}>\n              <div className=\"content mr-auto ml-auto\">\n                  <p>&nbsp;</p>\n                  <form onSubmit={(event) => {\n                      event.preventDefault()\n                      const content = this.postContent.value\n                      this.props.createPost(content)\n                  }}> \n                      <div className=\"form-group mr-sm-2\">\n                          <input\n                            id=\"postContent\"\n                            type=\"text\"\n                            ref={(input) => { this.postContent = input }}\n                            className=\"form-control\"\n                            placeholder=\"What's on your mind?\"\n                            required />\n                      </div>\n                      <button type=\"submit\" className=\"btn btn-primary btn-block\">Share</button>\n                  </form>\n                  <p>&nbsp;</p>\n                { this.props.posts.map((post, key) => {\n                  return(\n                    <div className=\"card mb-4\" key={key} >\n                      <div className=\"card-header\">\n                        <img \n                          className='mr-2' \n                          width='30' \n                          height='30' \n                          src={`data:image/png;base64,${new Identicon(post.author, 30).toString()}`} \n                        />\n                        <small className=\"text-muted\">{post.author}</small>\n                        <KebabDropdown />\n                    </div>\n                    <ul id=\"postList\" className=\"list-group list-group-flush\">\n                      <li className=\"list-group-item\">\n                        <p>{post.content}</p>\n                      </li>\n                      <li key={key} className=\"list-group-item py-2\">\n                        <small className=\"float-left mt-1 text-muted\">\n                          TIPS: {window.web3.utils.fromWei(post.tipAmount.toString(), 'Ether')} ETH\n                        </small>\n                        <button \n                            className=\"btn btn-link btn-sm float-right pt-0\"\n                            name={post.id}\n                            onClick={(event) => {\n                                let tipAmount = window.web3.utils.toWei('0.001', 'Ether')\n                                this.props.tipPost(event.target.name, tipAmount)\n                            }}\n                        >\n                            TIP 0.001 ETH\n                        </button>\n                      </li>\n                    </ul> \n                    </div>\n                  )\n                })}          \n              </div>\n            </main>\n          </div>\n        </div>\n        );\n    }\n}\n\nexport default Main;","/mnt/c/Users/mreyn/Documents/Memetic/memetic/src/components/Profile.js",[],{"ruleId":"42","severity":1,"message":"43","line":9,"column":5,"nodeType":"44","messageId":"45","endLine":9,"endColumn":19},{"ruleId":"42","severity":1,"message":"46","line":11,"column":5,"nodeType":"44","messageId":"45","endLine":11,"endColumn":22},{"ruleId":"42","severity":1,"message":"47","line":12,"column":5,"nodeType":"44","messageId":"45","endLine":12,"endColumn":21},{"ruleId":"42","severity":1,"message":"48","line":13,"column":5,"nodeType":"44","messageId":"45","endLine":13,"endColumn":22},{"ruleId":"42","severity":1,"message":"49","line":16,"column":10,"nodeType":"44","messageId":"45","endLine":16,"endColumn":16},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"42","severity":1,"message":"54","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":17},{"ruleId":"42","severity":1,"message":"55","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":15},{"ruleId":"56","severity":1,"message":"57","line":22,"column":25,"nodeType":"58","endLine":27,"endColumn":27},{"ruleId":"42","severity":1,"message":"59","line":2,"column":8,"nodeType":"44","messageId":"45","endLine":2,"endColumn":16},{"ruleId":"56","severity":1,"message":"57","line":35,"column":25,"nodeType":"58","endLine":40,"endColumn":27},"no-unused-vars","'DropdownToggle' is defined but never used.","Identifier","unusedVar","'DropdownSeparator' is defined but never used.","'DropdownPosition' is defined but never used.","'DropdownDirection' is defined but never used.","'ThIcon' is defined but never used.","no-native-reassign",["60"],"no-negated-in-lhs",["61"],"'Identicon' is defined but never used.","'Profile' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation"]